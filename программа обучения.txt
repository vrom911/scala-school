Цели и структура курса
Настрока рабочего места. Инсталяция scala, idea, sbt.
Запуск пробного предустановленного проекта

Введение
 Виды яыков. Функциональные языки 
 Scala - multi-paradigm
 Примеры
	Императивный стиль
	Функциональный стиль
Типы в скала
 Иерархия типов
 Вывод типов
 Задания
Основные конструкциии языка
 Пакеты 
 Импорты 
	Переименование пакетов	
Определения
 Константы
 Переменные
    Ленивые декларации
 Функции
	Функции
	Значения по умолчанию
	Процедуры
	Переменная длинна аргументов
	Функции как значения. Функции высшего порядка.
	Каррированные функции
	Композиция функций одной переменной
	    compose, andThen
	Композиция функций несколькоих переменных
	    curried, tupled
	Call-by-name параметры
           Разрешение циклических зависимостей
       	Повторное вычисление
	Функции. Задания
Операторы
 Операторы витвления  IF
   Циклы
   Задания
Pattern Matching
   Синтаксис
   Возможности
   Пример для case class
   Пример для коллекции
   Задания
Partial functions
   Задания
Обзор коллекций
 Коллекции в скала
    Трейты, составляющие основу коллекций в scala
    Основные методы (map, flatMap, collect, foldLeft, transform ...)
    Примеры коллекций
    Option
    Задания
    For comprehension
    Tuples
 Задания
Объекты и классы
   Классы
       Уровни доступа Private, public, protected.
       Ограничение досупа(scoped). До пакета. До инстанса.
   Кейс классы.
   Трейты
   Объекты. Кейс объекты. Объекты компаньоны
   Чем полезны компаньоны
   Подробнее об apply
   Подробнее об unapply
   Задания
Коротко о тестировании в скала.
    ScalaTest
        FunSuit
        FlatSpec
        WordSpec
        Mocks
    ScalaCheck
    Задания
Исключительные ситуации
    Checked / Unckecked / Fatal / NonFatal
    try{}catch{}
    Try{}
    Задания
ООП
    extends и with
    Полиморфизм, инкапсуляция, наследование, абстракция.
    SOLID
    Наследлвание в скала
        Линейное наследоване, ключевое слово extends, ключевое слово override
        Super, final, sealed
        Mix in наследование - трейты
        Diamond problem.
        Линеизация
        Анонимные классы
        Self type annotation
    Задания
Type parameters. Общая информация.
    Экзистенциальные типы
    Конструктор типов. Higher Kinded Type
    Ограничение параметров типов (type bounds)
    Вариативность, ковариантность, контрвариантность
   	Структурные типы
    Абстрактные типы
   	В чем разница между абстрактные типами и тайп параметрами.
    type erasure
   	Задания
Имплиситы.
   	Механизм обнаружения и работы имплиситов
   	Implicit conversions. Pimp my library. Примеры из predef.
   	Implicit parameters
   	Implicit contexts
    Type classes
    Задания
Потоки (Streams)
Структурные типы
Path dependent types
Асинхронность в SCALA
 Futures
    Как выполняеться Future. ExecutionContext. ForkJoinPool
    Статические методы
    Callback функции
    Комбинаторы над Future
   	Promise, зачем он нужен. Пример
   	Правила работы с Future
   	Задание
 Akka actors
    Что такое актор.
   	Actor System. Конфигурция и применение
   	Простой актор
   	методы Ask, tell, receive
   	SupervisionStrategy.
   	Метод become.

SBT в деталях
    Структура проекта SBT
    build.sbt
    project
    зависимости
    контексты
        config
        project
        task
    создание своего таска
    плагины

Связь с JAVA.
 Конвертация коллекций
 Способы исследования сгенерированного кода
    JAD
    javap

Мат. часть
	Понятяие категории. Морфизмы. Функторы.
	Монада и моноид
	Applicative
	Применение в скале.
	Функциональные шаблоны.
	Free monada.
	Trampoline
	Reader monada.
    список для самостоятельного изучения.

Ограничения и подводные камни
	инициализация lazy val
	def vs val и ETA conversion
